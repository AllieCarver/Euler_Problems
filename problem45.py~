#! -*- coding=utf-8 -*-
import time
import math

"""
========================
Project Euler Problem 45
========================
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
Triangle 	  	Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
Pentagonal 	  	Pn=n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
Hexagonal 	  	Hn=n(2n−1) 	  	1, 6, 15, 28, 45, ...

It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""

def problem45():
    p=167
    h=145
    pen=set()
    hx=set()
    intersect=None
#using math
    while not intersect:
        if ((math.sqrt(float(24*(h*(2*h-1))+1))+1)/6)%1==0:
                 intersect=h*(2*h-1)
        h+=1
    return intersect

time1=time.time()    
print problem45()
time2=time.time()
print time2-time1

def problem45b():
    p=167
    h=145
    pen=set()
    hx=set()
    intersect=None
#using given equations 
    while not intersect:
        for i in xrange(10000):
            pen.add((p+i)*(3*(p+i)-1)/2)
        for i in xrange(10000):
            hx.add((h+i)*(2*(h+i)-1))
        if pen.intersection(hx):
                intersect=pen.intersection(hx)            
        p+=10000
        h+=10000
    return intersect.pop()

if __name__=='__main__':
    time1=time.time()
    print problem45b()
    time2=time.time()
    print time2-time1	
